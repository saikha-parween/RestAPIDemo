plugins {
    id 'java'
    id 'org.springframework.boot' version '2.6.7'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id "org.flywaydb.flyway" version "8.4.2"
}

group 'org.example'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}
bootJar {
    manifest {
        attributes "Implementation-Title": "Gradle"
//        attributes "Booking-Implementation-Version": version
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation('com.fasterxml.jackson.core:jackson-databind:2.13.2.1') {
        version {
            strictly '2.13.2.1'
        }
    }
    implementation 'com.fasterxml.jackson:jackson-bom:2.13.2'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.squareup.okhttp3:okhttp:4.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger2', version: '3.0.0'
    implementation group: 'io.springfox', name: 'springfox-swagger-ui', version: '3.0.0'
//    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-security', version: '2.6.2'
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"
    implementation 'org.postgresql:postgresql:42.2.25'
    implementation 'com.jcabi:jcabi-manifests:1.1'
    implementation 'org.flywaydb:flyway-core'

    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: "junit", module: "junit"
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.3.1'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.3.1'
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.4.2")
    testImplementation("com.squareup.okhttp3:mockwebserver:4.0.0")
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation("com.h2database:h2")
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'

    components {
        withModule('org.springframework:spring-beans') {
            allVariants {
                withDependencyConstraints {
                    // Need to patch constraints because snakeyaml is an optional dependency
                    it.findAll { it.name == 'snakeyaml' }.each { it.version { strictly '1.19' } }
                }
            }
        }
    }
}


test {
    useJUnitPlatform()
}
flyway {
    url = 'jdbc:postgresql://localhost:5432/employee'
    user = 'employee'
    password = 'postgres'

}
bootRun {
    args = ["--spring.profiles.active=local"]
}
